"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/excel/route";
exports.ids = ["app/api/excel/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fexcel%2Froute&page=%2Fapi%2Fexcel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexcel%2Froute.ts&appDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fexcel%2Froute&page=%2Fapi%2Fexcel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexcel%2Froute.ts&appDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_PC_workspace_sales_report_src_app_api_excel_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/excel/route.ts */ \"(rsc)/./src/app/api/excel/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/excel/route\",\n        pathname: \"/api/excel\",\n        filename: \"route\",\n        bundlePath: \"app/api/excel/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\PC\\\\workspace\\\\sales-report\\\\src\\\\app\\\\api\\\\excel\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_PC_workspace_sales_report_src_app_api_excel_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/excel/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4yLjNfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZleGNlbCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZXhjZWwlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZleGNlbCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNQQyU1Q3dvcmtzcGFjZSU1Q3NhbGVzLXJlcG9ydCU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDUEMlNUN3b3Jrc3BhY2UlNUNzYWxlcy1yZXBvcnQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNzQjtBQUNuRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NhbGVzLXJlcG9ydC1kYXNoYm9hcmQvPzcxMTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcUENcXFxcd29ya3NwYWNlXFxcXHNhbGVzLXJlcG9ydFxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxleGNlbFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJzdGFuZGFsb25lXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2V4Y2VsL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZXhjZWxcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2V4Y2VsL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcUENcXFxcd29ya3NwYWNlXFxcXHNhbGVzLXJlcG9ydFxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxleGNlbFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZXhjZWwvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fexcel%2Froute&page=%2Fapi%2Fexcel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexcel%2Froute.ts&appDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/excel/route.ts":
/*!************************************!*\
  !*** ./src/app/api/excel/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _data_sampleData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/data/sampleData */ \"(rsc)/./src/data/sampleData.ts\");\n\n\n// POST /api/excel - 엑셀 VBA에서 승인/반려 정보 수신\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { month, year, approvalStatus, memo, approvedBy, excelVersion } = body;\n        // 유효성 검사\n        if (!month || !year || !approvalStatus) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"필수 파라미터가 누락되었습니다.\"\n            }, {\n                status: 400\n            });\n        }\n        if (![\n            \"approved\",\n            \"rejected\",\n            \"pending\"\n        ].includes(approvalStatus)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"유효하지 않은 승인 상태입니다.\"\n            }, {\n                status: 400\n            });\n        }\n        // 해당 월 데이터 찾기\n        const reportIndex = _data_sampleData__WEBPACK_IMPORTED_MODULE_1__.monthlyReports.findIndex((r)=>r.month === parseInt(month) && r.year === parseInt(year));\n        if (reportIndex === -1) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"해당 월의 데이터를 찾을 수 없습니다.\"\n            }, {\n                status: 404\n            });\n        }\n        // 데이터 업데이트\n        _data_sampleData__WEBPACK_IMPORTED_MODULE_1__.monthlyReports[reportIndex] = {\n            ..._data_sampleData__WEBPACK_IMPORTED_MODULE_1__.monthlyReports[reportIndex],\n            approvalStatus,\n            memo: memo || \"\",\n            approvedBy: approvedBy || \"Excel VBA\",\n            approvedAt: approvalStatus !== \"pending\" ? new Date().toISOString() : undefined,\n            updatedAt: new Date().toISOString()\n        };\n        // 로그 기록 (실제 운영에서는 데이터베이스 로그 테이블에 저장)\n        console.log(`Excel VBA 연동: ${year}년 ${month}월 레포트 ${approvalStatus} by ${approvedBy}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                month: parseInt(month),\n                year: parseInt(year),\n                approvalStatus,\n                message: `${year}년 ${month}월 레포트가 성공적으로 ${approvalStatus === \"approved\" ? \"승인\" : \"반려\"}되었습니다.`,\n                timestamp: new Date().toISOString(),\n                excelVersion\n            }\n        });\n    } catch (error) {\n        console.error(\"Excel API Error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"엑셀 연동 처리 중 오류가 발생했습니다.\"\n        }, {\n            status: 500\n        });\n    }\n}\n// GET /api/excel - 엑셀에서 현재 승인 상태 조회\nasync function GET(request) {\n    try {\n        const url = new URL(request.url);\n        const month = url.searchParams.get(\"month\");\n        const year = url.searchParams.get(\"year\") || \"2024\";\n        if (!month) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"month 파라미터가 필요합니다.\"\n            }, {\n                status: 400\n            });\n        }\n        const report = _data_sampleData__WEBPACK_IMPORTED_MODULE_1__.monthlyReports.find((r)=>r.month === parseInt(month) && r.year === parseInt(year));\n        if (!report) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"해당 월의 데이터를 찾을 수 없습니다.\"\n            }, {\n                status: 404\n            });\n        }\n        // 엑셀에서 필요한 정보만 반환\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                month: report.month,\n                year: report.year,\n                approvalStatus: report.approvalStatus,\n                approvedBy: report.approvedBy,\n                approvedAt: report.approvedAt,\n                memo: report.memo,\n                canEdit: report.approvalStatus === \"pending\"\n            }\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"데이터 조회 중 오류가 발생했습니다.\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/excel/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/data/sampleData.ts":
/*!********************************!*\
  !*** ./src/data/sampleData.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMonthlyReport: () => (/* binding */ addMonthlyReport),\n/* harmony export */   dailyTransactions: () => (/* binding */ dailyTransactions),\n/* harmony export */   getCashFlowData: () => (/* binding */ getCashFlowData),\n/* harmony export */   getChartData: () => (/* binding */ getChartData),\n/* harmony export */   getExpenseByCategory: () => (/* binding */ getExpenseByCategory),\n/* harmony export */   getFixedVariableData: () => (/* binding */ getFixedVariableData),\n/* harmony export */   getMonthlyDetailTableData: () => (/* binding */ getMonthlyDetailTableData),\n/* harmony export */   getMonthlyReport: () => (/* binding */ getMonthlyReport),\n/* harmony export */   getMonthlyReports: () => (/* binding */ getMonthlyReports),\n/* harmony export */   getWaterfallData: () => (/* binding */ getWaterfallData),\n/* harmony export */   kpiData: () => (/* binding */ kpiData),\n/* harmony export */   monthlyData: () => (/* binding */ monthlyData),\n/* harmony export */   monthlyReports: () => (/* binding */ monthlyReports),\n/* harmony export */   updateMonthlyReport: () => (/* binding */ updateMonthlyReport)\n/* harmony export */ });\n// 전역 데이터 저장소 (메모리)\nlet globalMonthlyReports = [\n    {\n        year: 2024,\n        month: 1,\n        salesRevenue: 244737761,\n        otherIncome: 0,\n        totalRevenue: 244737761,\n        rentExpense: 34286046,\n        laborExpense: 34746632,\n        materialExpense: 30955171,\n        operatingExpense: 32084635,\n        otherExpense: 30734362,\n        totalExpense: 162806846,\n        netIncome: 81930915,\n        profitMargin: 33.5,\n        cashBalance: 6356416405,\n        cashFlowChange: 81930915,\n        approvalStatus: \"approved\",\n        approvedAt: \"2024-02-05T09:00:00Z\",\n        approvedBy: \"관리자\",\n        memo: \"1월 실적 승인완료\",\n        createdAt: \"2024-01-31T18:00:00Z\",\n        updatedAt: \"2024-02-05T09:00:00Z\"\n    },\n    {\n        year: 2024,\n        month: 2,\n        salesRevenue: 220000000,\n        otherIncome: 5000000,\n        totalRevenue: 225000000,\n        rentExpense: 30000000,\n        laborExpense: 35000000,\n        materialExpense: 28000000,\n        operatingExpense: 30000000,\n        otherExpense: 25000000,\n        totalExpense: 148000000,\n        netIncome: 77000000,\n        profitMargin: 34.2,\n        cashBalance: 6433416405,\n        cashFlowChange: 77000000,\n        approvalStatus: \"approved\",\n        approvedAt: \"2024-03-05T09:00:00Z\",\n        approvedBy: \"관리자\",\n        memo: \"2월 실적 승인완료\",\n        createdAt: \"2024-02-29T18:00:00Z\",\n        updatedAt: \"2024-03-05T09:00:00Z\"\n    },\n    {\n        year: 2024,\n        month: 3,\n        salesRevenue: 280000000,\n        otherIncome: 3000000,\n        totalRevenue: 283000000,\n        rentExpense: 32000000,\n        laborExpense: 38000000,\n        materialExpense: 35000000,\n        operatingExpense: 33000000,\n        otherExpense: 28000000,\n        totalExpense: 166000000,\n        netIncome: 117000000,\n        profitMargin: 41.3,\n        cashBalance: 6550416405,\n        cashFlowChange: 117000000,\n        approvalStatus: \"pending\",\n        memo: \"\",\n        createdAt: \"2024-03-31T18:00:00Z\",\n        updatedAt: \"2024-03-31T18:00:00Z\"\n    }\n];\n// 데이터 관리 함수들\nconst getMonthlyReports = ()=>{\n    return [\n        ...globalMonthlyReports\n    ]; // 복사본 반환\n};\nconst getMonthlyReport = (year, month)=>{\n    return globalMonthlyReports.find((r)=>r.year === year && r.month === month);\n};\nconst addMonthlyReport = (report)=>{\n    const existingIndex = globalMonthlyReports.findIndex((r)=>r.year === report.year && r.month === report.month);\n    if (existingIndex >= 0) {\n        // 기존 데이터 업데이트\n        globalMonthlyReports[existingIndex] = report;\n        return report;\n    } else {\n        // 새 데이터 추가\n        globalMonthlyReports.push(report);\n        return report;\n    }\n};\nconst updateMonthlyReport = (year, month, updates)=>{\n    const index = globalMonthlyReports.findIndex((r)=>r.year === year && r.month === month);\n    if (index >= 0) {\n        globalMonthlyReports[index] = {\n            ...globalMonthlyReports[index],\n            ...updates\n        };\n        return globalMonthlyReports[index];\n    }\n    return null;\n};\n// 2024년 월별 샘플 데이터 (하위 호환성)\nconst monthlyData = globalMonthlyReports;\n// monthlyReports로도 내보내기 (하위 호환성)\nconst monthlyReports = globalMonthlyReports;\n// 샘플 일별 거래 데이터 (3월)\nconst dailyTransactions = [\n    {\n        id: \"20240301-001\",\n        date: \"2024-03-01\",\n        description: \"매출입금\",\n        amount: 4200000,\n        type: \"income\",\n        category: \"매출\",\n        detail: \"고객 A 서비스 대금\",\n        customer: \"고객 A\"\n    },\n    {\n        id: \"20240301-002\",\n        date: \"2024-03-01\",\n        description: \"임대료 지출\",\n        amount: -1500000,\n        type: \"expense\",\n        category: \"임대료\",\n        detail: \"사무실 임대료\",\n        vendor: \"임대업체\"\n    },\n    {\n        id: \"20240302-001\",\n        date: \"2024-03-02\",\n        description: \"매출입금\",\n        amount: 3800000,\n        type: \"income\",\n        category: \"매출\",\n        detail: \"고객 B 서비스 대금\",\n        customer: \"고객 B\"\n    },\n    {\n        id: \"20240302-002\",\n        date: \"2024-03-02\",\n        description: \"인건비 지출\",\n        amount: -2200000,\n        type: \"expense\",\n        category: \"인건비\",\n        detail: \"직원 급여\",\n        vendor: \"급여\"\n    },\n    {\n        id: \"20240303-001\",\n        date: \"2024-03-03\",\n        description: \"재료비 지출\",\n        amount: -800000,\n        type: \"expense\",\n        category: \"재료비\",\n        detail: \"원자재 구매\",\n        vendor: \"자재업체\"\n    }\n];\n// KPI 샘플 데이터\nconst kpiData = {\n    totalRevenue: 749737761,\n    totalExpense: 476806846,\n    currentCashBalance: 6550416405,\n    profitMargin: 36.4,\n    revenueChange: 25.6,\n    expenseChange: 12.1,\n    cashBalanceChange: 3.1,\n    profitMarginChange: 20.7\n};\n// 차트용 데이터 변환 함수\nconst getChartData = ()=>{\n    return monthlyData.map((data)=>({\n            period: `${data.year}-${data.month < 10 ? \"0\" + data.month : data.month}`,\n            revenue: data.totalRevenue,\n            expense: data.totalExpense,\n            netIncome: data.netIncome\n        }));\n};\n// 카테고리별 지출 데이터\nconst getExpenseByCategory = (month, year = 2024)=>{\n    const data = monthlyData.find((d)=>d.year === year && d.month === month);\n    if (!data) return [];\n    const total = data.totalExpense;\n    return [\n        {\n            category: \"임대료\",\n            amount: data.rentExpense,\n            percentage: data.rentExpense / total * 100\n        },\n        {\n            category: \"인건비\",\n            amount: data.laborExpense,\n            percentage: data.laborExpense / total * 100\n        },\n        {\n            category: \"재료비\",\n            amount: data.materialExpense,\n            percentage: data.materialExpense / total * 100\n        },\n        {\n            category: \"운영비\",\n            amount: data.operatingExpense,\n            percentage: data.operatingExpense / total * 100\n        },\n        {\n            category: \"기타\",\n            amount: data.otherExpense,\n            percentage: data.otherExpense / total * 100\n        }\n    ];\n};\n// 현금흐름 데이터 (6개월간)\nconst getCashFlowData = ()=>{\n    const currentMonthlyData = [\n        {\n            month: \"10월\",\n            inflow: 45000000,\n            outflow: 38000000\n        },\n        {\n            month: \"11월\",\n            inflow: 52000000,\n            outflow: 41000000\n        },\n        {\n            month: \"12월\",\n            inflow: 48000000,\n            outflow: 44000000\n        },\n        {\n            month: \"1월\",\n            inflow: 38000000,\n            outflow: 42000000\n        },\n        {\n            month: \"2월\",\n            inflow: 41000000,\n            outflow: 39000000\n        },\n        {\n            month: \"3월\",\n            inflow: 55000000,\n            outflow: 43000000\n        }\n    ];\n    return currentMonthlyData.map((data)=>({\n            ...data,\n            netFlow: data.inflow - data.outflow\n        }));\n};\n// 고정비/유동비 데이터\nconst getFixedVariableData = ()=>{\n    // 실제 데이터에서 계산된 고정비/유동비 비율\n    const totalExpense = kpiData.totalExpense;\n    const fixedCosts = 35; // 임대료 + 고정 인건비 등\n    const variableCosts = 65; // 재료비 + 변동비 등\n    return [\n        {\n            name: \"고정비\",\n            value: fixedCosts,\n            color: \"#ff6b6b\"\n        },\n        {\n            name: \"유동비\",\n            value: variableCosts,\n            color: \"#4ecdc4\"\n        }\n    ];\n};\n// 폭포차트 데이터 (매출 → 순이익 구조 분석)\nconst getWaterfallData = ()=>{\n    const totalRevenue = kpiData.totalRevenue;\n    const breakdown = {\n        revenue: totalRevenue,\n        materialCost: -150000000,\n        laborCost: -100000000,\n        rentCost: -35000000,\n        marketingCost: -25000000,\n        otherCost: -20000000\n    };\n    const cumulative = {\n        revenue: breakdown.revenue,\n        afterMaterial: breakdown.revenue + breakdown.materialCost,\n        afterLabor: breakdown.revenue + breakdown.materialCost + breakdown.laborCost,\n        afterRent: breakdown.revenue + breakdown.materialCost + breakdown.laborCost + breakdown.rentCost,\n        afterMarketing: breakdown.revenue + breakdown.materialCost + breakdown.laborCost + breakdown.rentCost + breakdown.marketingCost,\n        final: breakdown.revenue + breakdown.materialCost + breakdown.laborCost + breakdown.rentCost + breakdown.marketingCost + breakdown.otherCost\n    };\n    return [\n        {\n            name: \"매출\",\n            value: breakdown.revenue,\n            cumulative: cumulative.revenue,\n            type: \"positive\"\n        },\n        {\n            name: \"매입원가\",\n            value: breakdown.materialCost,\n            cumulative: cumulative.afterMaterial,\n            type: \"negative\"\n        },\n        {\n            name: \"인건비\",\n            value: breakdown.laborCost,\n            cumulative: cumulative.afterLabor,\n            type: \"negative\"\n        },\n        {\n            name: \"임대료\",\n            value: breakdown.rentCost,\n            cumulative: cumulative.afterRent,\n            type: \"negative\"\n        },\n        {\n            name: \"마케팅비\",\n            value: breakdown.marketingCost,\n            cumulative: cumulative.afterMarketing,\n            type: \"negative\"\n        },\n        {\n            name: \"기타비용\",\n            value: breakdown.otherCost,\n            cumulative: cumulative.final,\n            type: \"negative\"\n        },\n        {\n            name: \"순이익\",\n            value: cumulative.final,\n            cumulative: cumulative.final,\n            type: \"total\"\n        }\n    ];\n};\n// 월별 상세 테이블 데이터 (누계 포함)\nconst getMonthlyDetailTableData = ()=>{\n    const sortedData = [\n        ...globalMonthlyReports\n    ].sort((a, b)=>{\n        if (a.year !== b.year) return a.year - b.year;\n        return a.month - b.month;\n    });\n    let cumulativeRevenue = 0;\n    let cumulativeExpense = 0;\n    let cumulativeNet = 0;\n    return sortedData.map((data, index)=>{\n        cumulativeRevenue += data.totalRevenue;\n        cumulativeExpense += data.totalExpense;\n        cumulativeNet += data.netIncome;\n        return {\n            month: `${data.month}월`,\n            revenue: data.totalRevenue,\n            expense: data.totalExpense,\n            netIncome: data.netIncome,\n            cumulativeRevenue,\n            cumulativeExpense,\n            cumulativeNet,\n            status: data.netIncome >= 0 ? \"흑자\" : \"적자\"\n        };\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/data/sampleData.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@14.2.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fexcel%2Froute&page=%2Fapi%2Fexcel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fexcel%2Froute.ts&appDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CPC%5Cworkspace%5Csales-report&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();